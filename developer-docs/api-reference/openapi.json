{
  "openapi": "3.0.0",
  "info": {
    "title": "Alchemyst AI API v1 documentation",
    "version": "1.0.0",
    "description": "v1 API documentation for Alchemyst AI"
  },
  "servers": [
    {
      "url": "http://sandbox.mintlify.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/v1/context/add": {
      "post": {
        "summary": "Add context data to the context processor",
        "description": "This endpoint accepts context data and sends it to a context processor for further handling. It returns a success or error response depending on the result from the context processor.",
        "tags": [
          "context"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "documents": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string",
                          "description": "The content of the document"
                        }
                      },
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "description": "Array of documents with content and additional metadata"
                  },
                  "source": {
                    "type": "string",
                    "description": "The source of the context data"
                  },
                  "context_type": {
                    "type": "string",
                    "enum": [
                      "resource",
                      "conversation",
                      "instruction"
                    ],
                    "description": "Type of context being added"
                  },
                  "scope": {
                    "type": "string",
                    "enum": [
                      "internal",
                      "external"
                    ],
                    "default": "internal",
                    "description": "Scope of the context"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Additional metadata for the context",
                    "properties": {
                      "fileName": {
                        "type": "string",
                        "description": "Name of the file"
                      },
                      "fileType": {
                        "type": "string",
                        "description": "Type/MIME of the file"
                      },
                      "lastModified": {
                        "type": "string",
                        "description": "Last modified timestamp"
                      },
                      "fileSize": {
                        "type": "number",
                        "description": "Size of the file in bytes"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Context added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request – Invalid or missing context data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "description": "Error details"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized – User is not authenticated"
          },
          "402": {
            "description": "Payment Required - User does not have enough credits"
          },
          "403": {
            "description": "Forbidden - User does not have required scope"
          },
          "404": {
            "description": "Not Found - Invalid context data format"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/context/delete": {
      "post": {
        "tags": [
          "context"
        ],
        "summary": "Delete context data",
        "description": "Deletes context data based on provided parameters",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "source": {
                    "type": "string",
                    "description": "Source identifier for the context"
                  },
                  "user_id": {
                    "type": "string",
                    "description": "Optional user ID",
                    "nullable": true
                  },
                  "organization_id": {
                    "type": "string",
                    "description": "Optional organization ID",
                    "nullable": true
                  },
                  "by_doc": {
                    "type": "boolean",
                    "description": "Flag to delete by document",
                    "default": true,
                    "nullable": true
                  },
                  "by_id": {
                    "type": "boolean",
                    "description": "Flag to delete by ID",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully deleted context",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "401": {
            "description": "Unauthorized - User not authenticated"
          },
          "403": {
            "description": "Forbidden - User lacks required permissions"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/context/memory/add": {
      "post": {
        "summary": "Add memory context data",
        "description": "This endpoint adds memory context data, fetching chat history if needed.",
        "tags": [
          "context"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "memoryId": {
                    "type": "string",
                    "description": "The ID of the memory"
                  },
                  "contents": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": true
                    },
                    "description": "Array of content objects with additional properties allowed"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Memory context added successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "402": {
            "description": "Payment Required"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/context/memory/delete": {
      "post": {
        "summary": "Delete memory context data",
        "description": "Deletes memory context data based on provided parameters",
        "tags": [
          "context"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "memoryId": {
                    "type": "string",
                    "description": "The ID of the memory to delete"
                  },
                  "user_id": {
                    "type": "string",
                    "description": "Optional user ID",
                    "nullable": true
                  },
                  "organization_id": {
                    "type": "string",
                    "description": "Optional organization ID",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully deleted memory context"
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/context/search": {
      "post": {
        "summary": "Search for context data in the context processor",
        "description": "This endpoint sends a search request to the context processor to retrieve relevant context data based on the provided query.",
        "tags": [
          "context"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "query",
                  "similarity_threshold",
                  "minimum_similarity_threshold"
                ],
                "properties": {
                  "user_id": {
                    "type": "string",
                    "description": "The ID of the user making the request",
                    "example": "user123"
                  },
                  "query": {
                    "type": "string",
                    "description": "The search query used to search for context data",
                    "example": "search query for user preferences"
                  },
                  "similarity_threshold": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1,
                    "description": "Maximum similarity threshold (must be >= minimum_similarity_threshold)",
                    "example": 0.8
                  },
                  "minimum_similarity_threshold": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1,
                    "description": "Minimum similarity threshold",
                    "example": 0.5
                  },
                  "scope": {
                    "type": "string",
                    "enum": [
                      "internal",
                      "external"
                    ],
                    "default": "internal",
                    "description": "Search scope"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Additional metadata for the search",
                    "default": {}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Context search request successfully processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contexts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "metadata": {
                            "type": "object"
                          },
                          "content": {
                            "type": "string"
                          },
                          "score": {
                            "type": "number",
                            "minimum": 0.001
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid or missing search parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "string",
                      "example": "Fields missing. Detailed error: {error details}"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - User not authenticated"
          },
          "402": {
            "description": "Payment Required - User not allowed to perform action"
          },
          "403": {
            "description": "Forbidden - User lacks required scope"
          },
          "500": {
            "description": "Internal error during context search processing",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "string",
                      "example": "error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/context/traces/{traceId}/delete": {
      "delete": {
        "summary": "Delete a specific data trace",
        "description": "Deletes a data trace for the authenticated user with the specified trace ID",
        "tags": [
          "Traces"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "traceId",
            "required": true,
            "description": "ID of the trace to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "trace": {
                      "type": "object",
                      "description": "The deleted trace data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/context/traces": {
      "get": {
        "summary": "Retrieves a list of traces for the authenticated user",
        "tags": [
          "Traces"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved traces",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "traces": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "userId": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - User not found"
          },
          "402": {
            "description": "Unauthorized - Invalid user"
          },
          "403": {
            "description": "Forbidden - User lacks required scope"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusText": {
                      "type": "string",
                      "description": "Error message (detailed in debug mode)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/context/view/docs": {
      "get": {
        "tags": [
          "context"
        ],
        "summary": "Retrieve user contexts by documents.",
        "description": "Fetches documents view for authenticated user with optional organization context",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved documents view",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - User not authenticated"
          },
          "402": {
            "description": "Invalid user"
          },
          "403": {
            "description": "Forbidden - User lacks required scope"
          },
          "default": {
            "description": "Unexpected error from context processor"
          }
        }
      }
    },
    "/api/v1/context/view": {
      "get": {
        "tags": [
          "context"
        ],
        "summary": "Retrieve user context",
        "description": "Gets the context information for the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved context",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "context": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "description": "List of context items"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - User not authenticated"
          },
          "403": {
            "description": "Forbidden - User doesn't have required scope"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/org/context/view": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "View organization context",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "userIds"
                ],
                "properties": {
                  "userIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contexts": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "402": {
            "description": "Invalid user"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Context processor error"
          }
        }
      }
    }
  },
  "webhooks": {
    "/plant/webhook": {
      "post": {
        "description": "Information about a new plant added to the store",
        "requestBody": {
          "description": "Plant added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": []
}